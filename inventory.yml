all:
  hosts:
    vm-kube-agent-01:
      ansible_host: 192.168.1.85
      ansible_user: tryy3
      ansible_python_interpreter: /usr/bin/python3
      k3s_control_node: false

vms:
  hosts:
    vm-kube-agent-01:

k3s_cluster:
  children:
    server:
      hosts:
        vm-kube-agent-01:
    agent:
      hosts:
        vm-kube-agent-01:

  vars:
    ansible_port: 22
    k3s_version: v1.32.3+k3s1
     # The token should be a random string of reasonable length. You can generate
    # one with the following commands:
    # - openssl rand -base64 64
    # - pwgen -s 64 1
    # You can use ansible-vault to encrypt this value / keep it secret.
    # Or you can omit it if not using Vagrant and let the first server automatically generate one.
    token: "{{ k3s_token }}"
    api_endpoint: "100.72.60.53"

    # Optional vars
    # extra_server_args: ""
    # extra_agent_args: ""
    # cluster_context: k3s-ansible
    # api_port: 6443
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.

    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images

    server_config_yaml:  |
      # os-deploy/rpi-5-gopher-files/ansible/roles/k3s_agent/templates/config.yaml.j2
      # K3s agent configuration managed by Ansible
      node-external-ip: "{{ ansible_tailscale0.ipv4.address }}"
    agent_config_yaml:  |
      # os-deploy/rpi-5-gopher-files/ansible/roles/k3s_agent/templates/config.yaml.j2
      # K3s agent configuration managed by Ansible
      node-external-ip: "{{ ansible_tailscale0.ipv4.address }}"
      node-ip: "{{ ansible_tailscale0.ipv4.address }}"
      vpn-auth: "name=tailscale,joinKey={{ k3s_tailscale_token }}"
      server: "https://{{ api_endpoint }}:6443" # Use the full URL from defaults
      kubelet-arg:
        - "eviction-hard=nodefs.available<5%,imagefs.available<5%"
        - "eviction-soft=nodefs.available<10%,imagefs.available<10%"
        - "eviction-soft-grace-period=nodefs.available=1m,imagefs.available=1m"
        - "eviction-minimum-reclaim=nodefs.available=1Gi,imagefs.available=1Gi"
    #   This is now an inner yaml file. Maintain the indentation.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # registries_config_yaml:  |
    #   Containerd can be configured to connect to private registries and use them to pull images as needed by the kubelet.
    #   YAML here will be placed as the content of /etc/rancher/k3s/registries.yaml
    #   See https://docs.k3s.io/installation/private-registry